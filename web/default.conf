# Redirect to https
server {
    listen 80;
    server_name stacks-gg.duckdns.org;

    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Main server
server {
    listen 443 ssl;
    server_name stacks-gg.duckdns.org;

    # SSL
    ssl_certificate /etc/letsencrypt/live/stacks-gg.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stacks-gg.duckdns.org/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Root
    root /usr/share/nginx/html;
    index index.html;

    # Gzip
    gzip off;

    # Location
    location / {
        try_files $uri /index.html;
    }

    # API
    location /api/ {
        proxy_pass http://backend:3000;
    }

    # Socket.io
    location /socket.io/ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Mongo Express
    location /mongo/ {
        rewrite ^/mongo(/.*)$ $1 break;
        proxy_pass http://mongo-express:8081/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        sub_filter_once off;
        sub_filter 'href="/' 'href="/mongo/';
        sub_filter 'src="/' 'src="/mongo/';
        sub_filter_types text/html text/css text/javascript application/javascript;
    }
}
